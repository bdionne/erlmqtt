#! /usr/bin/env escript
%%! -pa ./ebin -pa deps/getopt/ebin

-define(OPTS,
        [
         {help, undefined, "help", boolean,
          "Display usage information and exit"},
         {host, $h, "host", {string, "localhost"},
          "MQTT server hostname or IP address"},
         {port, $p, "port", {integer, 1883},
          "MQTT server port number"}
        ]).

-define(ARGS,
        [{topic, "The topic to subscribe to"}]).

main(Argv) ->
    {ok, {Opts, Args}} = getopt:parse(?OPTS, Argv),
    case proplists:get_value(help, Opts) of
        true ->
            ScriptPath = escript:script_name(),
            Script = filename:basename(ScriptPath),
            ArgString = [["<", atom_to_list(N), "> "] || {N, _} <- ?ARGS],
            HelpString = [{["<", atom_to_list(N), ">"], H} || {N, H} <- ?ARGS],
            getopt:usage(?OPTS, Script, ArgString, HelpString),
            halt(0);
        _ ->
            ok
    end,
    [Topic |_] = Args,
    [Host, Port] = [proplists:get_value(K, Opts) ||
                       K <- [host, port]],
    {ok, C} = erlmqtt:open_clean({Host, Port}, []),
    io:format("Subscribing to ~s~n", [Topic]),
    erlmqtt:subscribe(C, [Topic]),
    recv().

recv() ->
    {_T, Msg} = erlmqtt:recv_message(),
    io:format("~s~n", [Msg]),
    recv().
